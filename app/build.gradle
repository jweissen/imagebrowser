apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 26



    defaultConfig {
        applicationId "net.weissenburger.producebrowser"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 4
        versionName "1.0"


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

    tasks.withType(Test) {
        jacoco.includeNoLocationClasses = true
    }

}

dependencies {
    implementation project(':mainmenu')
    implementation project(':imageviewer')
    implementation project(':base')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
}


task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}